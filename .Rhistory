ggplot() +
#geom_point(data = outlets[["beltroadnews"]], aes(month, sentiment, color = "beltroadnews"), size = 3) +
#geom_smooth(data = outlets[["beltroadnews"]], aes(month, sentiment), se = FALSE, color = "red")+
#geom_point(data = outlets[["XHNews"]], aes(month, sentiment, color = "XHNews"), size = 3) +
#geom_smooth(data = outlets[["XHNews"]], aes(month, sentiment), se = FALSE, color = "blue") +
geom_point(data = outlets[["globaltimesnews"]], aes(month, sentiment, color = "globaltimesnews"), size = 3) +
geom_smooth(data = outlets[["globaltimesnews"]], aes(month, sentiment), se = FALSE, color = "green") +
#geom_point(data = outlets[["ChinaDaily"]], aes(month, sentiment, color = "ChinaDaily"), size = 3) +
#geom_smooth(data = outlets[["ChinaDaily"]], aes(month, sentiment), se = FALSE, color = "orange") +
scale_color_manual(values = c("beltroadnews" = "red", "XHNews" = "blue",  "globaltimesnews" = "green", "ChinaDaily" = "orange")) +
labs(
title = "Average Sentiment Score by Month from 2014-2021",
x = "Year",
y = "Sentiment Score (-6 to 6)",
color = "News Agency") +
scale_y_continuous(
breaks = seq(0, 2, by = .2),
limits = c(0, 2)) +
#Organizes the x axis by each month then formats how we want it labeled
scale_x_date(
date_breaks = "1 year",
date_labels = "%b '%y") +
theme_clean()
ggplot() +
geom_point(data = outlets[["beltroadnews"]], aes(month, sentiment, color = "beltroadnews"), size = 3) +
geom_smooth(data = outlets[["beltroadnews"]], aes(month, sentiment), se = FALSE, color = "red")+
geom_point(data = outlets[["XHNews"]], aes(month, sentiment, color = "XHNews"), size = 3) +
geom_smooth(data = outlets[["XHNews"]], aes(month, sentiment), se = FALSE, color = "blue") +
geom_point(data = outlets[["globaltimesnews"]], aes(month, sentiment, color = "globaltimesnews"), size = 3) +
geom_smooth(data = outlets[["globaltimesnews"]], aes(month, sentiment), se = FALSE, color = "green") +
geom_point(data = outlets[["ChinaDaily"]], aes(month, sentiment, color = "ChinaDaily"), size = 3) +
geom_smooth(data = outlets[["ChinaDaily"]], aes(month, sentiment), se = FALSE, color = "orange") +
scale_color_manual(values = c("beltroadnews" = "red", "XHNews" = "blue",  "globaltimesnews" = "green", "ChinaDaily" = "orange")) +
labs(
title = "Average Sentiment Score by Month from 2014-2021",
x = "Year",
y = "Sentiment Score (-6 to 6)",
color = "News Agency") +
scale_y_continuous(
breaks = seq(0, 2, by = .2),
limits = c(0, 2)) +
#Organizes the x axis by each month then formats how we want it labeled
scale_x_date(
date_breaks = "1 year",
date_labels = "%b '%y") +
theme_clean()
ggplot() +
geom_point(data = outlets[["beltroadnews"]], aes(month, sentiment, color = "beltroadnews"), size = 3) +
geom_smooth(data = outlets[["beltroadnews"]], aes(month, sentiment), se = FALSE, color = "red")+
geom_point(data = outlets[["XHNews"]], aes(month, sentiment, color = "XHNews"), size = 3) +
geom_smooth(data = outlets[["XHNews"]], aes(month, sentiment), se = FALSE, color = "blue") +
geom_point(data = outlets[["globaltimesnews"]], aes(month, sentiment, color = "globaltimesnews"), size = 3) +
geom_smooth(data = outlets[["globaltimesnews"]], aes(month, sentiment), se = FALSE, color = "green") +
geom_point(data = outlets[["ChinaDaily"]], aes(month, sentiment, color = "ChinaDaily"), size = 3) +
geom_smooth(data = outlets[["ChinaDaily"]], aes(month, sentiment), se = FALSE, color = "orange") +
scale_color_manual(values = c("beltroadnews" = "red", "XHNews" = "blue",  "globaltimesnews" = "green", "ChinaDaily" = "orange")) +
labs(
title = "Average Sentiment Score by Month",
x = "Year",
y = "Sentiment Score (-6 to 6)",
color = "News Agency") +
scale_y_continuous(
breaks = seq(0, 2, by = .2),
limits = c(0, 2)) +
#Organizes the x axis by each month then formats how we want it labeled
scale_x_date(
date_breaks = "1 year",
date_labels = "%b '%y") +
theme_clean()
#Graph plotting Top 5, top 10, all tweets, and Chinese state media tweets together on the same plot to see their influence
ggplot() +
#  geom_point(data = tweet_sentiments_a, aes(month, sentiment, color = "All Tweets"), size = 3) +
#  geom_smooth(data = tweet_sentiments_a, aes(month, sentiment), se = FALSE, color = "red")+
geom_point(data = TopX_list[["top_5"]], aes(month, sentiment, color = "Top 5"), size = 3) +
geom_smooth(data = TopX_list[["top_5"]], aes(month, sentiment), se = FALSE, color = "blue") +
geom_point(data = TopX_list[["top_10"]], aes(month, sentiment, color = "Top 10"), size = 3) +
geom_smooth(data = TopX_list[["top_10"]], aes(month, sentiment), se = FALSE, color = "purple") +
geom_point(data = TopX_list[["top_20"]], aes(month, sentiment, color = "Top 20"), size = 3) +
geom_smooth(data = TopX_list[["top_20"]], aes(month, sentiment), se = FALSE, color = "green") +
#  geom_point(data = sentiments_CSM, aes(month, sentiment, color = "Chinese State Media"), size = 3) +
#  geom_smooth(data = sentiments_CSM, aes(month, sentiment), se = FALSE, color = "orange") +
scale_color_manual(values = c("All Tweets" = "red", "Top 5" = "blue", "Top 10" = "purple", "Top 20" = "green", "Chinese State Media" = "orange")) +
#labels = c("All Tweeters", "Top Ten", "Top Five", "CSM")) +
labs(
title = "Average Sentiment Score from 2014-2022",
x = "Year",
y = "Sentiment Score (-6 to 6)",
color = "Group") +
#scale_y_continuous(
#breaks = seq(-0.5, 2, by = .2),
#limits = c(-0.5, 2)) +
#Organizes the x axis by each month then formats how we want it labeled
scale_x_date(
date_breaks = "1 year",
date_labels = "%b '%y") +
theme_clean()
#Graph plotting Top 5, top 10, all tweets, and Chinese state media tweets together on the same plot to see their influence
ggplot() +
#  geom_point(data = tweet_sentiments_a, aes(month, sentiment, color = "All Tweets"), size = 3) +
#  geom_smooth(data = tweet_sentiments_a, aes(month, sentiment), se = FALSE, color = "red")+
geom_point(data = TopX_list[["top_5"]], aes(month, sentiment, color = "Top 5"), size = 3) +
geom_smooth(data = TopX_list[["top_5"]], aes(month, sentiment), se = FALSE, color = "blue") +
geom_point(data = TopX_list[["top_10"]], aes(month, sentiment, color = "Top 10"), size = 3) +
geom_smooth(data = TopX_list[["top_10"]], aes(month, sentiment), se = FALSE, color = "purple") +
geom_point(data = TopX_list[["top_20"]], aes(month, sentiment, color = "Top 20"), size = 3) +
geom_smooth(data = TopX_list[["top_20"]], aes(month, sentiment), se = FALSE, color = "green") +
#  geom_point(data = sentiments_CSM, aes(month, sentiment, color = "Chinese State Media"), size = 3) +
#  geom_smooth(data = sentiments_CSM, aes(month, sentiment), se = FALSE, color = "orange") +
scale_color_manual(values = c("All Tweets" = "red", "Top 5" = "blue", "Top 10" = "purple", "Top 20" = "green", "Chinese State Media" = "orange")) +
#labels = c("All Tweeters", "Top Ten", "Top Five", "CSM")) +
labs(
title = "Average Sentiment Score from 2014-2022",
x = "Year",
y = "Sentiment Score (-6 to 6)",
color = "Group") +
#scale_y_continuous(
#breaks = seq(-0.5, 2, by = .2),
#limits = c(-0.5, 2)) +
#Organizes the x axis by each month then formats how we want it labeled
scale_x_date(
date_breaks = "1 year",
date_labels = "%b '%y") +
theme_clean() +
theme(panel.grid.minor.y = element_line(color = "gray", linetype = "dotted"))
#Graph plotting Top 5, top 10, all tweets, and Chinese state media tweets together on the same plot to see their influence
ggplot() +
geom_point(data = tweet_sentiments_a, aes(month, sentiment, color = "All Tweets"), size = 3) +
geom_smooth(data = tweet_sentiments_a, aes(month, sentiment), se = FALSE, color = "red")+
geom_point(data = TopX_list[["top_5"]], aes(month, sentiment, color = "Top 5"), size = 3) +
geom_smooth(data = TopX_list[["top_5"]], aes(month, sentiment), se = FALSE, color = "blue") +
geom_point(data = TopX_list[["top_10"]], aes(month, sentiment, color = "Top 10"), size = 3) +
geom_smooth(data = TopX_list[["top_10"]], aes(month, sentiment), se = FALSE, color = "purple") +
geom_point(data = TopX_list[["top_20"]], aes(month, sentiment, color = "Top 20"), size = 3) +
geom_smooth(data = TopX_list[["top_20"]], aes(month, sentiment), se = FALSE, color = "green") +
geom_point(data = sentiments_CSM, aes(month, sentiment, color = "Chinese State Media"), size = 3) +
geom_smooth(data = sentiments_CSM, aes(month, sentiment), se = FALSE, color = "orange") +
scale_color_manual(values = c("All Tweets" = "red", "Top 5" = "blue", "Top 10" = "purple", "Top 20" = "green", "Chinese State Media" = "orange")) +
#labels = c("All Tweeters", "Top Ten", "Top Five", "CSM")) +
labs(
title = "Average Sentiment Score from 2014-2022",
x = "Year",
y = "Sentiment Score (-6 to 6)",
color = "Group") +
#scale_y_continuous(
#breaks = seq(-0.5, 2, by = .2),
#limits = c(-0.5, 2)) +
#Organizes the x axis by each month then formats how we want it labeled
scale_x_date(
date_breaks = "1 year",
date_labels = "%b '%y") +
theme_clean() +
theme(panel.grid.minor.y = element_line(color = "gray", linetype = "dotted"))
#Graph plotting Top 5, top 10, all tweets, and Chinese state media tweets together on the same plot to see their influence
ggplot() +
geom_point(data = tweet_sentiments_a, aes(month, sentiment, color = "All Tweets"), size = 3) +
geom_smooth(data = tweet_sentiments_a, aes(month, sentiment), se = FALSE, color = "red")+
geom_point(data = TopX_list[["top_5"]], aes(month, sentiment, color = "Top 5"), size = 3) +
geom_smooth(data = TopX_list[["top_5"]], aes(month, sentiment), se = FALSE, color = "blue") +
#  geom_point(data = TopX_list[["top_10"]], aes(month, sentiment, color = "Top 10"), size = 3) +
#  geom_smooth(data = TopX_list[["top_10"]], aes(month, sentiment), se = FALSE, color = "purple") +
#  geom_point(data = TopX_list[["top_20"]], aes(month, sentiment, color = "Top 20"), size = 3) +
#  geom_smooth(data = TopX_list[["top_20"]], aes(month, sentiment), se = FALSE, color = "green") +
geom_point(data = sentiments_CSM, aes(month, sentiment, color = "Chinese State Media"), size = 3) +
geom_smooth(data = sentiments_CSM, aes(month, sentiment), se = FALSE, color = "orange") +
scale_color_manual(values = c("All Tweets" = "red", "Top 5" = "blue", "Top 10" = "purple", "Top 20" = "green", "Chinese State Media" = "orange")) +
#labels = c("All Tweeters", "Top Ten", "Top Five", "CSM")) +
labs(
title = "Average Sentiment Score from 2014-2022",
x = "Year",
y = "Sentiment Score (-6 to 6)",
color = "Group") +
#scale_y_continuous(
#breaks = seq(-0.5, 2, by = .2),
#limits = c(-0.5, 2)) +
#Organizes the x axis by each month then formats how we want it labeled
scale_x_date(
date_breaks = "1 year",
date_labels = "%b '%y") +
theme_clean() +
theme(panel.grid.minor.y = element_line(color = "gray", linetype = "dotted"))
ggplot() +
geom_point(data = tweet_sentiments_a, aes(month, sentiment, color = "All Tweets"), size = 3) +
geom_smooth(data = tweet_sentiments_a, aes(month, sentiment), color = "red")+
#  geom_point(data = TopX_list[["top_5"]], aes(month, sentiment, color = "Top 5"), size = 3) +
#  geom_smooth(data = TopX_list[["top_5"]], aes(month, sentiment), se = FALSE, color = "blue") +
#  geom_point(data = TopX_list[["top_10"]], aes(month, sentiment, color = "Top 10"), size = 3) +
#  geom_smooth(data = TopX_list[["top_10"]], aes(month, sentiment), se = FALSE, color = "purple") +
#  geom_point(data = TopX_list[["top_20"]], aes(month, sentiment, color = "Top 20"), size = 3) +
#  geom_smooth(data = TopX_list[["top_20"]], aes(month, sentiment), se = FALSE, color = "green") +
geom_point(data = sentiments_CSM, aes(month, sentiment, color = "Chinese State Media"), size = 3) +
geom_smooth(data = sentiments_CSM, aes(month, sentiment), color = "orange") +
scale_color_manual(values = c("All Tweets" = "red", "Top 5" = "blue", "Top 10" = "purple", "Top 20" = "green", "Chinese State Media" = "orange")) +
#labels = c("All Tweeters", "Top Ten", "Top Five", "CSM")) +
labs(
title = "Average Sentiment Score from 2014-2022",
x = "Month",
y = "Sentiment Score (-6 to 6)",
color = "Tweet Source") +
scale_y_continuous(
breaks = seq(-0.5, 2, by = .2),
limits = c(-0.5, 2)) +
#Organizes the x axis by each month then formats how we want it labeled
scale_x_date(
date_breaks = "1 year",
date_labels = "%b '%y") +
theme_clean()
ggplot() +
geom_point(data = tweet_sentiments_a, aes(month, sentiment, color = "All Tweets"), size = 3) +
geom_smooth(data = tweet_sentiments_a, aes(month, sentiment), color = "red")+
#  geom_point(data = TopX_list[["top_5"]], aes(month, sentiment, color = "Top 5"), size = 3) +
#  geom_smooth(data = TopX_list[["top_5"]], aes(month, sentiment), se = FALSE, color = "blue") +
#  geom_point(data = TopX_list[["top_10"]], aes(month, sentiment, color = "Top 10"), size = 3) +
#  geom_smooth(data = TopX_list[["top_10"]], aes(month, sentiment), se = FALSE, color = "purple") +
#  geom_point(data = TopX_list[["top_20"]], aes(month, sentiment, color = "Top 20"), size = 3) +
#  geom_smooth(data = TopX_list[["top_20"]], aes(month, sentiment), se = FALSE, color = "green") +
geom_point(data = sentiments_CSM, aes(month, sentiment, color = "Chinese State Media"), size = 3) +
geom_smooth(data = sentiments_CSM, aes(month, sentiment), color = "orange") +
scale_color_manual(values = c("All Tweets" = "red", "Top 5" = "blue", "Top 10" = "purple", "Top 20" = "green", "Chinese State Media" = "orange")) +
#labels = c("All Tweeters", "Top Ten", "Top Five", "CSM")) +
labs(
title = "Average Sentiment Score from 2014-2022",
x = "Month",
y = "Sentiment Score (-6 to 6)",
color = "Tweet Source") +
#scale_y_continuous(
#breaks = seq(-0.5, 2, by = .2),
#limits = c(-0.5, 2)) +
#Organizes the x axis by each month then formats how we want it labeled
scale_x_date(
date_breaks = "1 year",
date_labels = "%b '%y") +
theme_clean()
ggplot() +
geom_point(data = tweet_sentiments_a, aes(month, sentiment, color = "All Tweets"), size = 3) +
geom_smooth(data = tweet_sentiments_a, aes(month, sentiment), color = "red")+
#  geom_point(data = TopX_list[["top_5"]], aes(month, sentiment, color = "Top 5"), size = 3) +
#  geom_smooth(data = TopX_list[["top_5"]], aes(month, sentiment), se = FALSE, color = "blue") +
#  geom_point(data = TopX_list[["top_10"]], aes(month, sentiment, color = "Top 10"), size = 3) +
#  geom_smooth(data = TopX_list[["top_10"]], aes(month, sentiment), se = FALSE, color = "purple") +
#  geom_point(data = TopX_list[["top_20"]], aes(month, sentiment, color = "Top 20"), size = 3) +
#  geom_smooth(data = TopX_list[["top_20"]], aes(month, sentiment), se = FALSE, color = "green") +
geom_point(data = sentiments_CSM, aes(month, sentiment, color = "Chinese State Media"), size = 3) +
geom_smooth(data = sentiments_CSM, aes(month, sentiment), color = "orange") +
scale_color_manual(values = c("All Tweets" = "red", "Top 5" = "blue", "Top 10" = "purple", "Top 20" = "green", "Chinese State Media" = "orange")) +
#labels = c("All Tweeters", "Top Ten", "Top Five", "CSM")) +
labs(
title = "Average Sentiment Score from 2014-2022",
x = "Month",
y = "Sentiment Score (-6 to 6)",
color = "Tweet Source") +
scale_y_continuous(
breaks = seq(-2, 2, by = 1),
limits = c(-2, 2)) +
#Organizes the x axis by each month then formats how we want it labeled
scale_x_date(
date_breaks = "1 year",
date_labels = "%b '%y") +
theme_clean() +
theme(panel.grid.minor.y = element_line(color = "gray", linetype = "dotted"))
ggplot() +
geom_point(data = tweet_sentiments_a, aes(month, sentiment, color = "All Tweets"), size = 3) +
geom_smooth(data = tweet_sentiments_a, aes(month, sentiment), color = "red")+
#  geom_point(data = TopX_list[["top_5"]], aes(month, sentiment, color = "Top 5"), size = 3) +
#  geom_smooth(data = TopX_list[["top_5"]], aes(month, sentiment), se = FALSE, color = "blue") +
#  geom_point(data = TopX_list[["top_10"]], aes(month, sentiment, color = "Top 10"), size = 3) +
#  geom_smooth(data = TopX_list[["top_10"]], aes(month, sentiment), se = FALSE, color = "purple") +
#  geom_point(data = TopX_list[["top_20"]], aes(month, sentiment, color = "Top 20"), size = 3) +
#  geom_smooth(data = TopX_list[["top_20"]], aes(month, sentiment), se = FALSE, color = "green") +
geom_point(data = sentiments_CSM, aes(month, sentiment, color = "Chinese State Media"), size = 3) +
geom_smooth(data = sentiments_CSM, aes(month, sentiment), color = "orange") +
scale_color_manual(values = c("All Tweets" = "red", "Top 5" = "blue", "Top 10" = "purple", "Top 20" = "green", "Chinese State Media" = "orange")) +
#labels = c("All Tweeters", "Top Ten", "Top Five", "CSM")) +
labs(
title = "Average Sentiment Score from 2014-2023",
x = "Month",
y = "Sentiment Score (-6 to 6)",
color = "Tweet Source") +
scale_y_continuous(
breaks = seq(-2, 2, by = 1),
limits = c(-2, 2)) +
#Organizes the x axis by each month then formats how we want it labeled
scale_x_date(
date_breaks = "1 year",
date_labels = "%b '%y") +
theme_clean() +
theme(panel.grid.minor.y = element_line(color = "gray", linetype = "dotted"))
#standardizing the bing lexicon to compare (positive = 1, negative = -1) then averaging them out to plot them over time
bing_scores$stan <- ifelse(bing_scores$sentiment == "positive", 1, -1)
#Creating a dataframe called tweet_sentiments that contains the month, average sentiment of tweets for that month, and number of tweets
#n_tweets = n() is used to create a new column in the summarized data frame that contains the number of tweets per month.
#When using dplyr functions like summarize(), you can use the n() function to count the number of rows in a group. In this case, we're grouping the data by month (in the format month-year) using group_by(month), and then counting the number of rows in each group (i.e., the number of tweets in each month) using n()
tweet_sentiments_b <- bing_scores %>%
group_by(month, year) %>%
summarise(sentiment = mean(stan), n_tweets = n()) %>%
#Changing the format of the month variable back into a date format so that we can use the geom_smooth function with it
mutate(month = as.Date(paste0("01-", month), format = "%d-%m-%y"))
#modification of afinn tweet_sentiments to be based on standardized column for comparison against bing
tweet_sentiments_a_s <- afinn_scores %>%
group_by(month, year) %>%
summarise(sentiment = mean(stan), n_tweets = n()) %>%
#Changing the format of the month variable back into a date format so that we can use the geom_smooth function with it
mutate(month = as.Date(paste0("01-", month), format = "%d-%m-%y"))
tweet_sentiments_b %>% ggplot(aes(month, sentiment)) +
#geom_smooth(color = "red", linetype = "solid", se = FALSE) +
geom_line(color = "blue", size = 1) +
geom_point(aes(size = n_tweets), alpha = 0.6, color = "blue") +
# Add vertical lines for each year
geom_vline(aes(xintercept = as.numeric(as.Date(paste0(year, "-01-01")))),
color = "gray", linetype = "dotted") +
labs(
title = "Average Sentiment of Tweets (Bing)",
x = "Time",
y = "Sentiment Score (-1 to 1)",
size = "Tweet Size"
)+
#scale_y_continuous(
#breaks = seq(-1, 1, by = .2),
#limits = c(-1, 1)) +
#Organizes the x axis by each month then formats how we want it labeled
scale_x_date(
date_breaks = "1 year",
date_labels = "%b '%y") +
#date_minor_breaks = "1 month", minor_breaks = "1 month") +
theme_clean() +
theme(
panel.grid.minor.y = element_line(color = "gray", linetype = "dotted"),
legend.position = c(.7, .2),
legend.direction = "horizontal",
legend.title = element_text(size = 10.5),
legend.text = element_text(size = 10)
)
tweet_sentiments_b %>% ggplot(aes(month, sentiment)) +
#geom_smooth(color = "red", linetype = "solid", se = FALSE) +
geom_line(color = "blue", size = 1) +
geom_point(aes(size = n_tweets), alpha = 0.6, color = "blue") +
# Add vertical lines for each year
geom_vline(aes(xintercept = as.numeric(as.Date(paste0(year, "-01-01")))),
color = "gray", linetype = "dotted") +
labs(
title = "Average Sentiment of Tweets Using Bing Lexicon",
x = "Year",
y = "Sentiment Score (-1 to 1)",
size = "Tweet Size"
)+
#scale_y_continuous(
#breaks = seq(-1, 1, by = .2),
#limits = c(-1, 1)) +
#Organizes the x axis by each month then formats how we want it labeled
scale_x_date(
date_breaks = "1 year",
date_labels = "%b '%y") +
#date_minor_breaks = "1 month", minor_breaks = "1 month") +
theme_clean() +
theme(panel.grid.minor.y = element_line(color = "gray", linetype = "dotted"),
legend.position = c(.7, .2),
legend.direction = "horizontal",
legend.title = element_text(size = 10.5),
legend.text = element_text(size = 10))
sentiment_year_b[["2018"]]
sentiment_year_b <- list()
for (yr in unique(tweet_sentiments_b$year)) {
df_year <- subset(tweet_sentiments_b, year == yr)
plot <- ggplot(df_year, aes(month, sentiment)) +
#geom_smooth(color = "red", linetype = "solid", se = FALSE) +
geom_line(color = "blue", size = 1) +
geom_point(aes(size = n_tweets), alpha = 0.6, color = "blue") +
# Add vertical lines for each month
geom_vline(aes(xintercept = month), color = "gray", linetype = "dotted") +
labs(
title = paste0("Average Sentiment of Tweets (Bing) by Month in ", yr),
x = paste0("Month (", yr, ")"),
y = "Sentiment Score (-6 to 6)",
size = "Tweet Size"
)+
#scale_y_continuous(
#breaks = seq(-1, 1, by = .2),
#limits = c(-1, 1)) +
#Organizes the x axis by each month then formats how we want it labeled
scale_x_date(
date_breaks = "1 month",
date_labels = "%b") +
#date_minor_breaks = "1 month", minor_breaks = "1 month") +
theme_clean() +
theme(panel.grid.minor.y = element_line(color = "gray", linetype = "dotted"),
#legend.position = c(.7, .3),
#legend.direction = "horizontal",
legend.title = element_text(size = 10.5),
legend.text = element_text(size = 10))
sentiment_year_b[[yr]] <- plot
rm(plot, df_year)
}
sentiment_year_b[["2018"]]
#plot_grid(plotlist = sentiment_year, ncol = 3)
sentiment_year_b <- list()
for (yr in unique(tweet_sentiments_b$year)) {
df_year <- subset(tweet_sentiments_b, year == yr)
plot <- ggplot(df_year, aes(month, sentiment)) +
#geom_smooth(color = "red", linetype = "solid", se = FALSE) +
geom_line(color = "blue", size = 1) +
geom_point(aes(size = n_tweets), alpha = 0.6, color = "blue") +
# Add vertical lines for each month
geom_vline(aes(xintercept = month), color = "gray", linetype = "dotted") +
labs(
title = paste0("Average Sentiment of Tweets (Bing) in ", yr),
x = paste0("Month (", yr, ")"),
y = "Sentiment Score (-6 to 6)",
size = "Tweet Size"
)+
#scale_y_continuous(
#breaks = seq(-1, 1, by = .2),
#limits = c(-1, 1)) +
#Organizes the x axis by each month then formats how we want it labeled
scale_x_date(
date_breaks = "1 month",
date_labels = "%b") +
#date_minor_breaks = "1 month", minor_breaks = "1 month") +
theme_clean() +
theme(panel.grid.minor.y = element_line(color = "gray", linetype = "dotted"),
#legend.position = c(.7, .3),
#legend.direction = "horizontal",
legend.title = element_text(size = 10.5),
legend.text = element_text(size = 10))
sentiment_year_b[[yr]] <- plot
rm(plot, df_year)
}
sentiment_year_b[["2018"]]
#plot_grid(plotlist = sentiment_year, ncol = 3)
ggplot() +
geom_line(data = tweet_sentiments_a_s, aes(month, sentiment, color = "All Tweets (Afinn)"), size = 1) +
geom_line(data = tweet_sentiments_b, aes(month, sentiment, color = "All Tweets (Bing)"), size = 1) +
scale_color_manual(values = c("All Tweets (Afinn)" = "red", "All Tweets (Bing)" = "blue")) +
labs(
title = "Average Sentiment Score of Tweets by Month from 2014 - 2021",
subtitle = "Sentiment standardized on -1 to 1 scale",
x = "Year",
y = "Sentiment Score (-1 to 1)",
size = "Tweet Size",
color = "Lexicon"
)+
#scale_y_continuous(
#breaks = seq(-2, 2, by = .2),
#limits = c(-2, 2)) +
#Organizes the x axis by each month then formats how we want it labeled
scale_x_date(
date_breaks = "1 year",
date_labels = "%b '%y") +
#date_minor_breaks = "1 month", minor_breaks = "1 month") +
theme_clean() +
theme(
panel.grid.minor.y = element_line(color = "gray", linetype = "dotted"),
legend.position = c(.7, .9),
legend.direction = "horizontal",
legend.title = element_text(size = 10.5),
legend.text = element_text(size = 10)
)
View(tweet_sentiments_a_s)
ggplot() +
geom_line(data = tweet_sentiments_a_s, aes(month, sentiment, color = "All Tweets (Afinn)"), size = 1) +
geom_line(data = tweet_sentiments_b, aes(month, sentiment, color = "All Tweets (Bing)"), size = 1) +
scale_color_manual(values = c("All Tweets (Afinn)" = "red", "All Tweets (Bing)" = "blue")) +
labs(
title = "Average Sentiment Score of Tweets by Month from 2014 - 2023",
subtitle = "Sentiment standardized on -1 to 1 scale",
x = "Year",
y = "Sentiment Score (-1 to 1)",
size = "Tweet Size",
color = "Lexicon"
)+
#scale_y_continuous(
#breaks = seq(-2, 2, by = .2),
#limits = c(-2, 2)) +
#Organizes the x axis by each month then formats how we want it labeled
scale_x_date(
date_breaks = "1 year",
date_labels = "%b '%y") +
#date_minor_breaks = "1 month", minor_breaks = "1 month") +
theme_clean() +
theme(
panel.grid.minor.y = element_line(color = "gray", linetype = "dotted"),
legend.position = c(.7, .9),
legend.direction = "horizontal",
legend.title = element_text(size = 10.5),
legend.text = element_text(size = 10)
)
ggplot() +
geom_line(data = tweet_sentiments_a_s, aes(month, sentiment, color = "All Tweets (Afinn)"), size = 1) +
geom_line(data = tweet_sentiments_b, aes(month, sentiment, color = "All Tweets (Bing)"), size = 1) +
scale_color_manual(values = c("All Tweets (Afinn)" = "red", "All Tweets (Bing)" = "blue")) +
labs(
title = "Average Sentiment Score of Tweets from 2014 - 2023",
subtitle = "Sentiment standardized on -1 to 1 scale",
x = "Year",
y = "Sentiment Score (-1 to 1)",
size = "Tweet Size",
color = "Lexicon"
)+
#scale_y_continuous(
#breaks = seq(-2, 2, by = .2),
#limits = c(-2, 2)) +
#Organizes the x axis by each month then formats how we want it labeled
scale_x_date(
date_breaks = "1 year",
date_labels = "%b '%y") +
#date_minor_breaks = "1 month", minor_breaks = "1 month") +
theme_clean() +
theme(
panel.grid.minor.y = element_line(color = "gray", linetype = "dotted"),
legend.position = c(.7, .9),
legend.direction = "horizontal",
legend.title = element_text(size = 10.5),
legend.text = element_text(size = 10)
)
